# From Bayesian Models for Astrophysical Data 
# by Hilbe, de Souza & Ishida, 2016, Cambridge Univ. Press

# Code 3.4 - Bayesian normal linear model in Python
# 1 response (y) and 1 explanatory variable (x1)

import numpy as np
from pymc3 import  Model, sample, summary, traceplot
from pymc3.glm import glm
import pylab as plt
import pandas
from scipy.stats import uniform, norm

# Data
np.random.seed(1056)                          # set seed to replicate example
nobs= 250                                     # number of obs in model 
x1 = uniform.rvs(size=nobs)                   # random uniform variable

beta0 = 2.0                                   # intercept
beta1 = 3.0                                   # angular coefficient

xb = beta0 + beta1 * x1                       # linear predictor, xb
y = norm.rvs(loc=xb, scale=1.0, size=nobs)    # create y as adjusted

                                              
# Fit
df = pandas.DataFrame({'x1': x1, 'y': y})     # re-write data

with Model() as model_glm:
    glm('y ~ x1', df)
    trace = sample(5000)

# Output
summary(trace)

# show graphical output
traceplot(trace)
plt.show()
